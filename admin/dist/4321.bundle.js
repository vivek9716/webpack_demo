"use strict";(self.webpackChunkadmin=self.webpackChunkadmin||[]).push([[4321],{16054:(e,l,t)=>{t.r(l),t.d(l,{default:()=>r});var a=t(67294),n=t(34475),m=t(23470);const r=function(){return a.createElement(n.rb,null,a.createElement(n.b7,{xs:12},a.createElement(n.xH,{className:"mb-4"},a.createElement(n.bn,null,a.createElement("strong",null,"React Floating labels")),a.createElement(n.sl,null,a.createElement("p",{className:"text-medium-emphasis small"},"Wrap a pair of ",a.createElement("code",null,"<CFormInput>")," and ",a.createElement("code",null,"<CFormLabel>")," ","elements in ",a.createElement("code",null,"CFormFloating")," to enable floating labels with textual form fields. A ",a.createElement("code",null,"placeholder")," is required on each ",a.createElement("code",null,"<CFormInput>")," ","as our method of CSS-only floating labels uses the ",a.createElement("code",null,":placeholder-shown")," ","pseudo-element. Also note that the ",a.createElement("code",null,"<CFormInput>")," must come first so we can utilize a sibling selector (e.g., ",a.createElement("code",null,"~"),")."),a.createElement(m.q3,{href:"forms/floating-labels"},a.createElement(n.j3,{className:"mb-3"},a.createElement(n.jO,{type:"email",id:"floatingInput",placeholder:"name@example.com"}),a.createElement(n.L8,{htmlFor:"floatingInput"},"Email address")),a.createElement(n.j3,null,a.createElement(n.jO,{type:"password",id:"floatingPassword",placeholder:"Password"}),a.createElement(n.L8,{htmlFor:"floatingPassword"},"Password"))),a.createElement("p",{className:"text-medium-emphasis small"},"When there's a ",a.createElement("code",null,"value")," already defined, ",a.createElement("code",null,"<CFormLabel>"),"s will automatically adjust to their floated position."),a.createElement(m.q3,{href:"forms/floating-labels"},a.createElement(n.j3,null,a.createElement(n.jO,{type:"email",id:"floatingInputValue",placeholder:"name@example.com",defaultValue:"test@example.com"}),a.createElement(n.L8,{htmlFor:"floatingInputValue"},"Input with value")))))),a.createElement(n.b7,{xs:12},a.createElement(n.xH,{className:"mb-4"},a.createElement(n.bn,null,a.createElement("strong",null,"React Floating labels")," ",a.createElement("small",null,"Textareas")),a.createElement(n.sl,null,a.createElement("p",{className:"text-medium-emphasis small"},"By default, ",a.createElement("code",null,"<CFormTextarea>"),"s will be the same height as"," ",a.createElement("code",null,"<CFormInput>"),"s."),a.createElement(m.q3,{href:"forms/floating-labels#textareas"},a.createElement(n.j3,null,a.createElement(n.PB,{id:"floatingTextarea",placeholder:"Leave a comment here"}),a.createElement(n.L8,{htmlFor:"floatingTextarea"},"Comments"))),a.createElement("p",{className:"text-medium-emphasis small"},"To set a custom height on your ",a.createElement("code",null,"<CFormTextarea;>"),", do not use the"," ",a.createElement("code",null,"rows")," attribute. Instead, set an explicit ",a.createElement("code",null,"height")," (either inline or via custom CSS)."),a.createElement(m.q3,{href:"forms/floating-labels#textareas"},a.createElement(n.j3,null,a.createElement(n.PB,{placeholder:"Leave a comment here",id:"floatingTextarea2",style:{height:"100px"}}),a.createElement(n.L8,{htmlFor:"floatingTextarea2"},"Comments")))))),a.createElement(n.b7,{xs:12},a.createElement(n.xH,{className:"mb-4"},a.createElement(n.bn,null,a.createElement("strong",null,"React Floating labels")," ",a.createElement("small",null,"Selects")),a.createElement(n.sl,null,a.createElement("p",{className:"text-medium-emphasis small"},"Other than ",a.createElement("code",null,"<CFormInput>"),", floating labels are only available on"," ",a.createElement("code",null,"<CFormSelect>"),"s. They work in the same way, but unlike"," ",a.createElement("code",null,"<CFormInput>"),"s, they'll always show the"," ",a.createElement("code",null,"<CFormLabel>")," in its floated state."," ",a.createElement("strong",null,"Selects with ",a.createElement("code",null,"size")," and ",a.createElement("code",null,"multiple")," are not supported.")),a.createElement(m.q3,{href:"forms/floating-labels#selects"},a.createElement(n.j3,null,a.createElement(n.LX,{id:"floatingSelect","aria-label":"Floating label select example"},a.createElement("option",null,"Open this select menu"),a.createElement("option",{value:"1"},"One"),a.createElement("option",{value:"2"},"Two"),a.createElement("option",{value:"3"},"Three")),a.createElement(n.L8,{htmlFor:"floatingSelect"},"Works with selects")))))),a.createElement(n.b7,{xs:12},a.createElement(n.xH,{className:"mb-4"},a.createElement(n.bn,null,a.createElement("strong",null,"React Floating labels")," ",a.createElement("small",null,"Layout")),a.createElement(n.sl,null,a.createElement("p",{className:"text-medium-emphasis small"},"When working with the CoreUI for Bootstrap grid system, be sure to place form elements within column classes."),a.createElement(m.q3,{href:"forms/floating-labels#layout"},a.createElement(n.rb,{xs:{gutter:2}},a.createElement(n.b7,{md:!0},a.createElement(n.j3,null,a.createElement(n.jO,{type:"email",id:"floatingInputGrid",placeholder:"name@example.com",defaultValue:"email@example.com"}),a.createElement(n.L8,{htmlFor:"floatingInputGrid"},"Email address"))),a.createElement(n.b7,{md:!0},a.createElement(n.j3,null,a.createElement(n.LX,{id:"floatingSelectGrid","aria-label":"Floating label select example"},a.createElement("option",null,"Open this select menu"),a.createElement("option",{value:"1"},"One"),a.createElement("option",{value:"2"},"Two"),a.createElement("option",{value:"3"},"Three")),a.createElement(n.L8,{htmlFor:"floatingSelectGrid"},"Works with selects")))))))))}}}]);