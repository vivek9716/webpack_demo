"use strict";(self.webpackChunkadmin=self.webpackChunkadmin||[]).push([[9669],{49669:(e,t,l)=>{l.r(t),l.d(t,{default:()=>r});var a=l(67294),n=l(34475),m=l(23470);const r=function(){return a.createElement(n.rb,null,a.createElement(n.b7,{xs:12},a.createElement(n.xH,{className:"mb-4"},a.createElement(n.bn,null,a.createElement("strong",null,"React Range")," ",a.createElement("small",null)),a.createElement(n.sl,null,a.createElement("p",{className:"text-medium-emphasis small"},"Create custom ",a.createElement("code",null,'<input type="range">')," controls with"," ",a.createElement("code",null,"<CFormRange>"),"."),a.createElement(m.q3,{href:"forms/range"},a.createElement(n.L8,{htmlFor:"customRange1"},"Example range"),a.createElement(n.ZB,{id:"customRange1"}))))),a.createElement(n.b7,{xs:12},a.createElement(n.xH,{className:"mb-4"},a.createElement(n.bn,null,a.createElement("strong",null,"React Range")," ",a.createElement("small",null,"Disabled")),a.createElement(n.sl,null,a.createElement("p",{className:"text-medium-emphasis small"},"Add the ",a.createElement("code",null,"disabled")," boolean attribute on an input to give it a grayed out appearance and remove pointer events."),a.createElement(m.q3,{href:"forms/range#disabled"},a.createElement(n.L8,{htmlFor:"disabledRange"},"Disabled range"),a.createElement(n.ZB,{id:"disabledRange",disabled:!0}))))),a.createElement(n.b7,{xs:12},a.createElement(n.xH,{className:"mb-4"},a.createElement(n.bn,null,a.createElement("strong",null,"React Range")," ",a.createElement("small",null,"Min and max")),a.createElement(n.sl,null,a.createElement("p",{className:"text-medium-emphasis small"},"Range inputs have implicit values for ",a.createElement("code",null,"min")," and ",a.createElement("code",null,"max"),"â€”",a.createElement("code",null,"0")," and ",a.createElement("code",null,"100"),", respectively. You may specify new values for those using the ",a.createElement("code",null,"min")," and ",a.createElement("code",null,"max")," attributes."),a.createElement(m.q3,{href:"forms/range#min-and-max"},a.createElement(n.L8,{htmlFor:"customRange2"},"Example range"),a.createElement(n.ZB,{min:"0",max:"5",defaultValue:"3",id:"customRange2"}))))),a.createElement(n.b7,{xs:12},a.createElement(n.xH,{className:"mb-4"},a.createElement(n.bn,null,a.createElement("strong",null,"React Range")," ",a.createElement("small",null,"Steps")),a.createElement(n.sl,null,a.createElement("p",{className:"text-medium-emphasis small"},'By default, range inputs "snap" to integer values. To change this, you can specify a ',a.createElement("code",null,"step")," value. In the example below, we double the number of steps by using ",a.createElement("code",null,'step="0.5"'),"."),a.createElement(m.q3,{href:"forms/range#steps"},a.createElement(n.L8,{htmlFor:"customRange3"},"Example range"),a.createElement(n.ZB,{min:"0",max:"5",step:"0.5",defaultValue:"3",id:"customRange3"}))))))}}}]);